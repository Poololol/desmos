{
  "scopeName": "source.desmosassembly",
  "patterns": [{ "include": "#expression" }],
  "repository": {
    "expression": {
      "patterns": [{ "include": "#opcode" }, { "include": "#register" }, { "include": "#number" }, { "include": "#def" }, { "include": "#string" }, { "include": "#label" }, { "include": "#comment" }, { "include": "#operator" }, { "include": "#paren-expression" }]
    },
    "opcode": {
      "match": "(NOP)|(HLT)|(ADD)|(SUB)|(XOR)|(NOR)|(AND)|(RSH)|(LDI)|(ADI)|(JMP)|(BRH)|(CAL)|(RET)|(LOD)|(STR)|(INC)|(DEC)|(CMP)",
      "name": "entity.name.function"
    },
    "register": {
      "match": "r[0-9]+",
      "name": "entity.name.tag"
    },
    "number": {
      "match": "(0b)|[0-9]",
      "name": "constant.numeric"
    },
    "def": {
      "match": "(#define)",
      "name": "support.function"
    },
    "string": {
      "match": "(\".+\")",
      "name": "string.quoted.double"
    },
    "label": {
      "match": "\\.\\w+",
      "name": "label"
    },
    "comment": {
      "match": ";.+",
      "name": "comment.line"
    },
    "operator": {
      "match": "[!=<>]+",
      "name": "keyword.operator"
    },
    "paren-expression": {
      "begin": "\\(",
      "end": "\\)",
      "beginCaptures": {
        "0": { "name": "punctuation.paren.open" }
      },
      "endCaptures": {
        "0": { "name": "punctuation.paren.close" }
      },
      "name": "expression.group",
      "patterns": [{ "include": "#expression" }]
    }
  }
}
